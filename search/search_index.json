{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Presentaci\u00f3n","text":"<ul> <li> <p>Nombre del proyecto: Introducci\u00f3n a la Mecatr\u00f3nica</p> </li> <li> <p>Equipo / Autor(es): Carlos Diego Machorro Lucero y Raul Everardo Zarate Ramirez</p> </li> <li> <p>Descripci\u00f3n breve: Esta ser\u00e1 una documentaci\u00f3n donde estar\u00e1n todos los trabajos y temas vistos en todo el semestre, as\u00ed como lo que se aprendi\u00f3 de ellos.</p> </li> </ul>"},{"location":"#-diego-machorro-lucero","title":"- Diego Machorro Lucero","text":""},{"location":"#quien-soy","title":"\u00bfQui\u00e9n soy?","text":"<p>Mi nombre es Diego Machorro Lucero, actualmente me encuentro estudiando la carrera de ingenier\u00eda mectr\u00f3nica. Me considero un buen estudiante puesto que hasta el momento un logro que he conseguido es la beca de 60% en la universidad donde estoy estudiando, ya que he mantenido un promedio de 0.2 en el bachillerato.</p>"},{"location":"#intereses","title":"Intereses","text":"<ul> <li>Videojuegos</li> <li>F\u00edsica</li> <li>Los animales</li> </ul>"},{"location":"#informacion-de-contacto","title":"Informaci\u00f3n de contacto","text":"<p>Correo: 203588@iberopuebla.mx Tel\u00e9fono cleular: 6188069822</p> <p></p>"},{"location":"#-raul-everardo-zarate-ramirez","title":"- Raul Everardo Zarate Ramirez","text":""},{"location":"#quien-soy_1","title":"\u00bfQui\u00e9n soy?","text":"<p>Soy Raul Everardo Zarate Ramirez, tengo 18 a\u00f1os y actualmente estoy estudiando ingenier\u00eda mecatr\u00f3nica en la universidad Iberoamericana de Puebla, me considero una gran persona,  parte importante para las personas a mi alrededor, puesto que soy buen apoyo emocional.</p>"},{"location":"#intereses_1","title":"Intereses","text":"<ul> <li>Videojuegos</li> <li>Dormir</li> <li>Los deportes</li> </ul>"},{"location":"#informacion-de-contacto_1","title":"Informaci\u00f3n de contacto","text":"<p>Correo: 203352@iberopuebla.mx Tel\u00e9fono celular: 2229060329</p> <p></p>"},{"location":"Introducci%C3%B3n%20a%20la%20mecatr%C3%B3nica/","title":"INTRODUCCI\u00d3N","text":"<p>Esta asignatura proporcionar\u00e1 una visi\u00f3n general de los principios fundamentales que integran la mec\u00e1nica, la electr\u00f3nica, la inform\u00e1tica y el control autom\u00e1tico en el dise\u00f1o de sistemas inteligentes. Nuestro objetivo como estudiantes consiste en comprender c\u00f3mo interact\u00faan estos campos para desarrollar dispositivos  y procesos automatizados que respondan eficientemente a diferentes necesidades tecnol\u00f3gicas e industriales.</p> <p>Durante el curso se abordar\u00e1n temas como los sistemas mec\u00e1nicos b\u00e1sicos, sensores y actuadores, microcontroladores, fundamentos de programaci\u00f3n, sistemas de control y  rob\u00f3tica. Adem\u00e1s, se promueve el trabajo interdisciplinario, la creatividad y la aplicaci\u00f3n pr\u00e1ctica de los conocimientos en proyectos de dise\u00f1o y automatizaci\u00f3n.</p>"},{"location":"Introducci%C3%B3n%20a%20la%20mecatr%C3%B3nica/#en-este-apartado-se-proporcionara-informacion-general-acerca-de-lo-visto-en-clase-sobre-lo-cual-se-planto-la-base-para-los-trabajos-realizados","title":"En este apartado se proporcionar\u00e1 informaci\u00f3n general acerca de lo visto en clase, sobre lo cual se plant\u00f3 la base para los trabajos realizados","text":""},{"location":"Introducci%C3%B3n%20a%20la%20mecatr%C3%B3nica/#temporizador-555","title":"Temporizador 555","text":"<p>El temporizador 555 es un circuito integrado muy usado en electr\u00f3nica por su versatilidad y facilidad de uso. Su funci\u00f3n principal es generar se\u00f1ales temporizadas o controlar intervalos de tiempo con gran precisi\u00f3n.</p> <p>Puede trabajar en tres modos principales:</p> <pre><code>- Monoestable: genera un solo pulso de duraci\u00f3n determinada (por ejemplo, para retardos o temporizadores).\n\n- Astable: genera una se\u00f1al continua (onda cuadrada), \u00fatil como reloj, parpadeo de LEDs o generador de tonos.\n\n- Biestable: funciona como un interruptor controlado por se\u00f1ales externas (flip-flop).\n</code></pre> <p>Usos comunes (informacion adicional):</p> <pre><code>- Temporizadores y retardos de tiempo.\n\n- Generadores de pulsos o se\u00f1ales cuadradas.\n\n- Control de parpadeo en LEDs o luces intermitentes.\n\n- Alarmas, osciladores y moduladores de frecuencia.\n\n- Control de servomotores o sistemas de automatizaci\u00f3n sencillos.\n</code></pre>"},{"location":"Introducci%C3%B3n%20a%20la%20mecatr%C3%B3nica/#microcontroladores-e-introduccion-a-programacion-en-arduino","title":"Microcontroladores e introducci\u00f3n a programaci\u00f3n en Arduino","text":"<p>Un microcontrolador es un peque\u00f1o chip que funciona como una mini computadora dentro de un solo circuito integrado. Contiene un procesador, memoria y puertos de entrada/salida, y se usa para controlar dispositivos electr\u00f3nicos de forma autom\u00e1tica, como sensores, motores o pantallas.</p> <ul> <li>ESP32</li> </ul> <p>Es un tipo de microcontrolador avanzado. Se destaca por incluir Wi-Fi y Bluetooth integrados, gran capacidad de procesamiento y bajo consumo de energ\u00eda. Es muy usado en proyectos de rob\u00f3tica y automatizaci\u00f3n.</p> <ul> <li>ARDUINO</li> </ul> <p>Arduino es una plataforma electr\u00f3nica de c\u00f3digo abierto que combina hardware (placas electr\u00f3nicas) y software (el entorno de programaci\u00f3n Arduino IDE). Se usa para crear proyectos interactivos que pueden leer informaci\u00f3n del entorno (con sensores) y controlar dispositivos (como motores, luces o pantallas).</p> Comando Funcion setup() Configurar pines o comunicaci\u00f3n serial. loop() Ejecutar repetidamente. pinMode(pin, modo) Configura un pin como entrada. digitalWrite(pin, valor) Env\u00eda un valor a un pin de salida. delay(ms) Definir pausas por cantidad de milisegundos."},{"location":"Introducci%C3%B3n%20a%20la%20mecatr%C3%B3nica/#motores","title":"Motores","text":"<ul> <li> <p>Los motores son dispositivos que convierten energ\u00eda el\u00e9ctrica en movimiento mec\u00e1nico. Se usan para generar giro o desplazamiento en robots, ventiladores, veh\u00edculos y muchos otros sistemas mecatr\u00f3nicos.</p> </li> <li> <p>M\u00d3DULO L298N</p> </li> </ul> <p>El L298N es un puente H doble (driver) que permite controlar la direcci\u00f3n y velocidad de dos motores DC o un motor paso a paso usando se\u00f1ales de un microcontrolador.</p> <p>Su importancia radica en que:</p> <pre><code>- Permite alimentar los motores con una fuente externa (ya que Arduino no puede suministrar suficiente corriente por s\u00ed solo).\n\n- Controla el sentido de giro (hacia adelante o atr\u00e1s).\n\n- Regula la velocidad mediante se\u00f1ales PWM.\n\n- Protege el microcontrolador de sobrecargas el\u00e9ctricas.\n</code></pre>"},{"location":"comandos/","title":"Actividad 1","text":""},{"location":"comandos/#circuito-realizado-con-temporizador-555","title":"Circuito realizado con temporizador 555","text":""},{"location":"comandos/#descripcion","title":"Descripci\u00f3n:","text":"<p>Se realiz\u00f3 un circuito utilizando el temporizador 555, un componente que sirve para generar se\u00f1ales y/o tiempos el\u00e9ctricas dentro de un circuito.</p>"},{"location":"comandos/#materiales-utilizados","title":"Materiales utilizados:","text":"<pre><code>- Osciloscopio\n   * A fin de monopolizar la variaci\u00f3n de se\u00f1al el\u00e9ctrica en el circuito\n- Protoboard\n- Cables jumper\n- Resistencias\n- Temporizador 555\n</code></pre>"},{"location":"comandos/#circuito-funcionando","title":"Circuito funcionando:","text":"<p>ACTIVIDAD 1 - CIRCUITO INTEGRADO 555</p>"},{"location":"ejemplo/","title":"Actividad 2","text":""},{"location":"ejemplo/#tres-circuitos-realizados-con-esp32","title":"TRES CIRCUITOS REALIZADOS CON ESP32","text":""},{"location":"ejemplo/#descripcion","title":"Descripci\u00f3n","text":"<ul> <li>A fin de aprender sobre la estructura b\u00e1sica del programado en Arduino con el componente ESP32 y su manejo con circuitos, durante esta clase se realizaorn tres circuitos diferentes.</li> </ul>"},{"location":"ejemplo/#21-blink-con-led","title":"2.1. Blink con led","text":"<ul> <li> <p>Consisti\u00f3n en un circuito en el cual se conect\u00f3 el ESP32 a un protoboard por medio de cables jumper, y esto se program\u00f3 en Arduino a fin de realizar un bulce de encendido y apagado con el led.</p> </li> <li> <p>Los materiales a utilizar fueron los siguientes:</p> </li> </ul> <pre><code>- Protoboard\n- Cables jumper\n- Resistencia\n- Un Led\n- ESP32\n-Computadora con la cual fue realizada la programaci\u00f3n en Arduino.\n</code></pre> <ul> <li>El c\u00f3digo con el cual fue programado fue el siguiente:</li> </ul> <pre><code>#define LED 23\n\nvoid setup() {\n    pinMode(LED, OUTPUT); \n}\n\nvoid loop() {\n    digitalWrite(LED, HIGH); \n    delay(1000); \n    digitalWrite(LED, LOW); \n    delay(1000);\n</code></pre> <ul> <li>Evidencia del circuito funcionando:</li> </ul> <p>Actividad 2.1 - Blink con Led</p>"},{"location":"ejemplo/#22-led-con-boton","title":"2.2. Led con bot\u00f3n","text":"<ul> <li> <p>Para el siguiente circuito, se realiz\u00f3 una r\u00e9plica del circuito anterior, con la diferencia de que se le a\u00f1adi\u00f3 un bot\u00f3n que encend\u00eda o apagaba el bucle.</p> </li> <li> <p>Los materiales a utilizar fueron los siguientes:</p> </li> </ul> <pre><code>- Protoboard\n- Cables jumper\n- Resistencia\n- Un Led\n- Pulsador de cuatro pines\n- ESP32\n-Computadora con la cual fue realizada la programaci\u00f3n en Arduino.\n</code></pre> <ul> <li>El c\u00f3digo con el cual fue programado fue el siguiente:</li> </ul> <pre><code>#define LED 23\n#define BUTTON 33\n\nvoid setup() {\n    pinMode(LED, OUTPUT);\n    pinMode(BUTTON, INPUT);\n}\n\nvoid loop() {\n    if (digitalRead(BUTTON) == HIGH) {\n        digitalWrite(LED, HIGH);\n    } else {\n        digitalWrite(LED, LOW);\n    }\n}\n</code></pre> <ul> <li>Evidencia del circuito funcionando:</li> </ul> <p>Actividad 2.2 - Led con bot\u00f3n</p>"},{"location":"ejemplo/#23-encendido-de-led-con-bluetooth","title":"2.3. Encendido de Led con bluetooth","text":"<ul> <li> <p>Para el \u00faltimo circuito, se utiliz\u00f3 el recurso del Bluetooth para encenderlo y apagarlo a trav\u00e9s de palabras.</p> </li> <li> <p>Los materiales a utilizar fueron los siguientes:</p> </li> </ul> <pre><code>- Protoboard\n- Cables jumper\n- Resistencia\n- Un Led\n- ESP32\n-Computadora con la cual fue realizada la programaci\u00f3n en Arduino.\n</code></pre> <ul> <li>El c\u00f3digo con el cual fue programado fue el siguiente:</li> </ul> <pre><code>#include \"BluetoothSerial.h\"\nBluetoothSerial SerialBT;\n\n#define LED 23\n\nvoid setup() {\n    Serial.begin(115200);\n    SerialBT.begin(\"ESP32\");\n    pinMode(LED, OUTPUT);\n}\n\nvoid loop() {\n    if (SerialBT.available()) {\n        String mensaje = SerialBT.readString();\n        Serial.println(\"Recibido: \" + mensaje);\n        if (mensaje == \"ON\") {\n            digitalWrite(LED, HIGH);\n        } else if (mensaje == \"OFF\") {\n            digitalWrite(LED, LOW);\n        }\n    }\n    delay(1000);\n}\n</code></pre> <ul> <li>Evidencia del circuito funcionando:</li> </ul> <p>Actividad 2.3 - Encendido de Led con Bluetooth</p>"},{"location":"gitcmds/","title":"Actividad 3","text":""},{"location":"gitcmds/#servomotor-y-sus-movimientos","title":"SERVOMOTOR Y SUS MOVIMIENTOS","text":""},{"location":"gitcmds/#descripcion","title":"DESCRIPCI\u00d3N","text":"<ul> <li>El prop\u00f3sito de esta clase fue aprender a utilizar un servomotor dentro de un circuito, as\u00ed como sus movimientos.</li> </ul>"},{"location":"gitcmds/#actividad-31","title":"Actividad 3.1","text":"<ul> <li>Esta actividad consisti\u00f3 en la programaci\u00f3n simple de un motor, en la cual se le indic\u00f3 la funci\u00f3n de girar hacia una direcci\u00f3n y luego detenerse, para luego comenzar, esto repetidas veces gracias a un bulce hecho en Arduino.</li> </ul>"},{"location":"gitcmds/#materiales-a-utilizar","title":"Materiales a utilizar:","text":"<pre><code>- ESP32\n- Cables jumper\n- Servomotor\n- M\u00f3dulo L298N\n</code></pre> <ul> <li>Evidencia del funcionamiento del circuito: </li> </ul> <p>Actividad 3.1 - Motor con direcci\u00f3n</p>"},{"location":"gitcmds/#actividad-32","title":"Actividad 3.2","text":"<ul> <li> <p>Para este caso, se utilizaron los mismos componentes y la misma estructura del c\u00f3digo, sin embargo este fue ligeramente modificado a fin de que ahora, el motor intercale direcciones, es decir, primero gira a una direcci\u00f3n y luego se detiene para luego girar a otra direcci\u00f3n, y as\u00ed repetidamente.</p> </li> <li> <p>C\u00f3digo:</p> </li> </ul> <pre><code>#define in1 27\n#define in2 14\n\nvoid setup() {\n  /*Declarar Pines Como salida*/\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n}\n\nvoid loop() {\n  /*ADELANTE*/\n  digitalWrite(in1, 0);\n  digitalWrite(in2, 1);\n  delay(1000);\n  /*ALTO*/\n  digitalWrite(in1, 0);\n  digitalWrite(in2, 0);\n  delay(1000);\n  /*ATRAS*/\n  digitalWrite(in1, 1);\n  digitalWrite(in2, 0);\n  delay(1000);\n  /*ALTO*/\n  digitalWrite(in1, 0);\n  digitalWrite(in2, 0);\n  delay(1000);\n}\n</code></pre> <p>Actividad 3.2 - Motor con dos direcciones</p>"}]}